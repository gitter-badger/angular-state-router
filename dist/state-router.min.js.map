{"version":3,"sources":["state-router.min.js"],"names":["e","t","n","r","s","o","u","a","require","i","f","Error","code","l","exports","call","length",1,"module","EventEmitter","this","_events","_maxListeners","undefined","isFunction","arg","isNumber","isObject","isUndefined","prototype","defaultMaxListeners","setMaxListeners","isNaN","TypeError","emit","type","er","handler","len","args","listeners","error","arguments","Array","apply","slice","addListener","listener","m","newListener","push","warned","console","trace","on","once","g","removeListener","fired","list","position","splice","removeAllListeners","key","ret","listenerCount","emitter",2,"cleanUpNextTick","draining","currentQueue","queue","concat","queueIndex","drainQueue","timeout","setTimeout","run","clearTimeout","Item","fun","array","noop","process","nextTick","title","browser","env","argv","version","versions","off","binding","name","cwd","chdir","dir","umask",3,"$stateRouter","restrict","scope","link","element","attrs","css","change","srRef",4,"angular","factory","directive","./directives/sr-ref","./services/state-router","./services/url-manager","./utils/function","./utils/object","./utils/process",5,"events","clone","_current","_historyLength","_history","_library","_emitter","_self","Object","create","_setStateDefaults","data","inherit","_getState","_defineState","state","_queueHistory","_changeState","params","callback","requestData","nextState","prevState","options","hasOwnProperty","historyLength","init","bind","current","active","RegExp","match","casted","substr","transformed","split","map","item","join","library","history","../utils/object","_process",6,7,"Function","oThis","aArgs","fToBind","fNOP","fBound",8,"Temp","hasOwn","O","obj","Properties","prop","level","copy","Date","setTime","getTime","attr",9,"window"],"mappings":"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","file":"state-router.min.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){\n// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nfunction EventEmitter() {\n  this._events = this._events || {};\n  this._maxListeners = this._maxListeners || undefined;\n}\nmodule.exports = EventEmitter;\n\n// Backwards-compat with node 0.10.x\nEventEmitter.EventEmitter = EventEmitter;\n\nEventEmitter.prototype._events = undefined;\nEventEmitter.prototype._maxListeners = undefined;\n\n// By default EventEmitters will print a warning if more than 10 listeners are\n// added to it. This is a useful default which helps finding memory leaks.\nEventEmitter.defaultMaxListeners = 10;\n\n// Obviously not all Emitters should be limited to 10. This function allows\n// that to be increased. Set to zero for unlimited.\nEventEmitter.prototype.setMaxListeners = function(n) {\n  if (!isNumber(n) || n < 0 || isNaN(n))\n    throw TypeError('n must be a positive number');\n  this._maxListeners = n;\n  return this;\n};\n\nEventEmitter.prototype.emit = function(type) {\n  var er, handler, len, args, i, listeners;\n\n  if (!this._events)\n    this._events = {};\n\n  // If there is no 'error' event listener then throw.\n  if (type === 'error') {\n    if (!this._events.error ||\n        (isObject(this._events.error) && !this._events.error.length)) {\n      er = arguments[1];\n      if (er instanceof Error) {\n        throw er; // Unhandled 'error' event\n      }\n      throw TypeError('Uncaught, unspecified \"error\" event.');\n    }\n  }\n\n  handler = this._events[type];\n\n  if (isUndefined(handler))\n    return false;\n\n  if (isFunction(handler)) {\n    switch (arguments.length) {\n      // fast cases\n      case 1:\n        handler.call(this);\n        break;\n      case 2:\n        handler.call(this, arguments[1]);\n        break;\n      case 3:\n        handler.call(this, arguments[1], arguments[2]);\n        break;\n      // slower\n      default:\n        len = arguments.length;\n        args = new Array(len - 1);\n        for (i = 1; i < len; i++)\n          args[i - 1] = arguments[i];\n        handler.apply(this, args);\n    }\n  } else if (isObject(handler)) {\n    len = arguments.length;\n    args = new Array(len - 1);\n    for (i = 1; i < len; i++)\n      args[i - 1] = arguments[i];\n\n    listeners = handler.slice();\n    len = listeners.length;\n    for (i = 0; i < len; i++)\n      listeners[i].apply(this, args);\n  }\n\n  return true;\n};\n\nEventEmitter.prototype.addListener = function(type, listener) {\n  var m;\n\n  if (!isFunction(listener))\n    throw TypeError('listener must be a function');\n\n  if (!this._events)\n    this._events = {};\n\n  // To avoid recursion in the case that type === \"newListener\"! Before\n  // adding it to the listeners, first emit \"newListener\".\n  if (this._events.newListener)\n    this.emit('newListener', type,\n              isFunction(listener.listener) ?\n              listener.listener : listener);\n\n  if (!this._events[type])\n    // Optimize the case of one listener. Don't need the extra array object.\n    this._events[type] = listener;\n  else if (isObject(this._events[type]))\n    // If we've already got an array, just append.\n    this._events[type].push(listener);\n  else\n    // Adding the second element, need to change to array.\n    this._events[type] = [this._events[type], listener];\n\n  // Check for listener leak\n  if (isObject(this._events[type]) && !this._events[type].warned) {\n    var m;\n    if (!isUndefined(this._maxListeners)) {\n      m = this._maxListeners;\n    } else {\n      m = EventEmitter.defaultMaxListeners;\n    }\n\n    if (m && m > 0 && this._events[type].length > m) {\n      this._events[type].warned = true;\n      console.error('(node) warning: possible EventEmitter memory ' +\n                    'leak detected. %d listeners added. ' +\n                    'Use emitter.setMaxListeners() to increase limit.',\n                    this._events[type].length);\n      if (typeof console.trace === 'function') {\n        // not supported in IE 10\n        console.trace();\n      }\n    }\n  }\n\n  return this;\n};\n\nEventEmitter.prototype.on = EventEmitter.prototype.addListener;\n\nEventEmitter.prototype.once = function(type, listener) {\n  if (!isFunction(listener))\n    throw TypeError('listener must be a function');\n\n  var fired = false;\n\n  function g() {\n    this.removeListener(type, g);\n\n    if (!fired) {\n      fired = true;\n      listener.apply(this, arguments);\n    }\n  }\n\n  g.listener = listener;\n  this.on(type, g);\n\n  return this;\n};\n\n// emits a 'removeListener' event iff the listener was removed\nEventEmitter.prototype.removeListener = function(type, listener) {\n  var list, position, length, i;\n\n  if (!isFunction(listener))\n    throw TypeError('listener must be a function');\n\n  if (!this._events || !this._events[type])\n    return this;\n\n  list = this._events[type];\n  length = list.length;\n  position = -1;\n\n  if (list === listener ||\n      (isFunction(list.listener) && list.listener === listener)) {\n    delete this._events[type];\n    if (this._events.removeListener)\n      this.emit('removeListener', type, listener);\n\n  } else if (isObject(list)) {\n    for (i = length; i-- > 0;) {\n      if (list[i] === listener ||\n          (list[i].listener && list[i].listener === listener)) {\n        position = i;\n        break;\n      }\n    }\n\n    if (position < 0)\n      return this;\n\n    if (list.length === 1) {\n      list.length = 0;\n      delete this._events[type];\n    } else {\n      list.splice(position, 1);\n    }\n\n    if (this._events.removeListener)\n      this.emit('removeListener', type, listener);\n  }\n\n  return this;\n};\n\nEventEmitter.prototype.removeAllListeners = function(type) {\n  var key, listeners;\n\n  if (!this._events)\n    return this;\n\n  // not listening for removeListener, no need to emit\n  if (!this._events.removeListener) {\n    if (arguments.length === 0)\n      this._events = {};\n    else if (this._events[type])\n      delete this._events[type];\n    return this;\n  }\n\n  // emit removeListener for all listeners on all events\n  if (arguments.length === 0) {\n    for (key in this._events) {\n      if (key === 'removeListener') continue;\n      this.removeAllListeners(key);\n    }\n    this.removeAllListeners('removeListener');\n    this._events = {};\n    return this;\n  }\n\n  listeners = this._events[type];\n\n  if (isFunction(listeners)) {\n    this.removeListener(type, listeners);\n  } else {\n    // LIFO order\n    while (listeners.length)\n      this.removeListener(type, listeners[listeners.length - 1]);\n  }\n  delete this._events[type];\n\n  return this;\n};\n\nEventEmitter.prototype.listeners = function(type) {\n  var ret;\n  if (!this._events || !this._events[type])\n    ret = [];\n  else if (isFunction(this._events[type]))\n    ret = [this._events[type]];\n  else\n    ret = this._events[type].slice();\n  return ret;\n};\n\nEventEmitter.listenerCount = function(emitter, type) {\n  var ret;\n  if (!emitter._events || !emitter._events[type])\n    ret = 0;\n  else if (isFunction(emitter._events[type]))\n    ret = 1;\n  else\n    ret = emitter._events[type].length;\n  return ret;\n};\n\nfunction isFunction(arg) {\n  return typeof arg === 'function';\n}\n\nfunction isNumber(arg) {\n  return typeof arg === 'number';\n}\n\nfunction isObject(arg) {\n  return typeof arg === 'object' && arg !== null;\n}\n\nfunction isUndefined(arg) {\n  return arg === void 0;\n}\n\n},{}],2:[function(require,module,exports){\n// shim for using process in browser\n\nvar process = module.exports = {};\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = setTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            currentQueue[queueIndex].run();\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    clearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        setTimeout(drainQueue, 0);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\n// TODO(shtylman)\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n\n},{}],3:[function(require,module,exports){\n'use strict';\n\nmodule.exports = ['$stateRouter', function ($stateRouter) {\n  return {\n    restrict: 'A',\n    scope: {\n    },\n    link: function(scope, element, attrs) {\n      element.css('cursor', 'pointer');\n      element.on('click', function() {\n        $stateRouter.change(attrs.srRef);\n      });\n    }\n\n  };\n}];\n\n},{}],4:[function(require,module,exports){\n'use strict';\n\n/* global angular:false */\n\n// CommonJS\nif (typeof module !== \"undefined\" && typeof exports !== \"undefined\" && module.exports === exports){\n  module.exports = 'angular-state-router';\n}\n\n// Polyfill\nrequire('./utils/object');\nrequire('./utils/process');\nrequire('./utils/function');\n\n// Instantiate module\nangular.module('angular-state-router', [])\n\n  .factory('$stateRouter', require('./services/state-router'))\n\n  .factory('$urlManager', require('./services/url-manager'))\n\n  .directive('srRef', require('./directives/sr-ref'));\n\n},{\"./directives/sr-ref\":3,\"./services/state-router\":5,\"./services/url-manager\":6,\"./utils/function\":7,\"./utils/object\":8,\"./utils/process\":9}],5:[function(require,module,exports){\n(function (process){\n'use strict';\n\n/* global process:false */\n\nvar events = require('events');\nvar clone = require('../utils/object').clone;\n\nmodule.exports = [function() {\n  // Current state\n  var _current;\n\n  // Keep the last n states (e.g. - defaults 5)\n  var _historyLength = 5;\n  var _history = [];\n\n  var _library = {};\n  var _emitter = new events.EventEmitter();\n\n  // Extend from EventEmitter\n  var _self = Object.create(_emitter);\n\n  /**\n   * Add default values to a state\n   * \n   * @param  {Object} data An Object\n   * @return {Object}      An Object\n   */\n  var _setStateDefaults = function(data) {\n    data.inherit = (typeof data.inherit === 'undefined') ? true : data.inherit;\n\n    return data;\n  };\n\n  /**\n   * Internal method to crawl library heirarchy\n   * \n   * @param {String} name   A unique identifier for the state; using dot-notation\n   */\n  var _getState = function(name) {\n    return _library[name];\n  };\n\n  /**\n   * Internal method to crawl library heirarchy\n   * \n   * @param  {String}      name   A unique identifier for the state; using dot-notation\n   * @param  {Object}      [data] A state definition data object, optional\n   */\n  var _defineState = function(name, data) {\n    if(name === null || typeof name === 'undefined') {\n      throw new Error('Name cannot be null');\n    }\n\n    var state = clone(data);\n\n    // Use defaults\n    _setStateDefaults(state);\n\n    // Named state\n    state.name = name;\n\n    _library[name] = state;\n\n    return state;\n  };\n\n  /**\n   * Queue history and correct length\n   * \n   * @param  {Object} data An Object\n   */\n  var _queueHistory = function(data) {\n    if(data) {\n      _history.push(data);\n    }\n\n    // Update length\n    if(_history.length > _historyLength) {\n      _history.splice(0, _history.length - _historyLength);\n    }\n  };\n\n  /**\n   * Internal change to state\n   * \n   * @param  {String}   name       A unique identifier for the state; using dot-notation\n   * @param  {Object}   [params]   A parameters data object\n   * @param  {Function} [callback] A callback, function(err)\n   */\n  var _changeState = function(name, params, callback) {\n    var error = null;\n    var requestData = {\n      name: name,\n      params: params\n    };\n\n    var nextState = _library[name];\n    var prevState = _current;\n\n    // Does not exist\n    if(!nextState) {\n      error = new Error('Requested state was not defined.');\n      error.code = 'notfound';\n      _self.emit('error:notfound', error, requestData);\n      _self.emit('error', error, requestData);\n\n    // Exists\n    } else {\n      // Process started\n      _self.emit('change:begin', requestData);\n\n      // Valid state exists\n      if(prevState) _queueHistory(prevState);\n      _current = nextState;\n\n      \n\n      // TODO change URL values\n\n\n\n      // TODO implement loadable interface\n      _self.emit('load:start');\n      _self.emit('load:progress');\n      _self.emit('load:end');\n      //_self.emit('error:load');\n\n\n      // TODO resolve \n      _self.emit('resolve:start');\n      //_self.emit('error:resolve');\n      _self.emit('resolve:end');\n\n\n\n\n      // Rendered view\n      _self.emit('render', requestData);\n\n\n\n\n      //_self.emit('error', new Error('An unknown error occurred.'), requestData);\n\n      // Process ended\n      _self.emit('change:end', requestData);\n    }\n\n    // Completion\n    if(callback) callback(error);\n    _self.emit('change:complete', requestData);\n  };\n\n  /**\n   * Set configuration options\n   * \n   * @param  {Object}      params A data Object\n   * @return {StateRouter}        Itself; chainable\n   */\n  _self.options = function(params) {\n    params = params || {};\n\n    if(params.hasOwnProperty('historyLength')) {\n      _historyLength = params.historyLength;\n      _queueHistory(null);\n    }\n\n    return _self;\n  };\n\n  /**\n   * Sett/get state data.  Define the states.  \n   *\n   * @param  {String}      name   A unique identifier for the state; using dot-notation\n   * @param  {Object}      [data] A state definition data object, optional\n   * @return {StateRouter}        Itself; chainable\n   */\n  _self.state = function(name, data) {\n    if(!data) {\n      return _getState(name);\n    }\n    _defineState(name, data);\n    return _self;\n  };\n\n  /**\n   * Initialize, asynchronous operation.  Definition is done, initialize.  \n   * \n   * @param  {String}      name     An initial state to start in.  \n   * @param  {Object}      [params] A parameters data object\n   * @return {StateRouter}          Itself; chainable\n   */\n  _self.init = function(name, params) {\n    process.nextTick(function() {\n    \n      // Initialize with state\n      if(name) {\n        _changeState(name, params, function() {\n          _self.emit('init');\n        });\n\n      // Initialize only\n      } else {\n        _self.emit('init');\n      }\n    });\n\n    return _self;\n  };\n\n  /**\n   * Public method to change state, asynchronous operation\n   * \n   * @param  {String} name     A unique identifier for the state; using dot-notation\n   * @param  {Object} [params] A parameters data object\n   */\n  _self.change = function(name, params) {\n    process.nextTick(_changeState.bind(null, name, params));\n    return _self;\n  };\n\n  /**\n   * Retrieve copy of current state\n   * \n   * @return {Object} A copy of current state\n   */\n  _self.current = function() {\n    return !_current ? null : clone(_current);\n  };\n\n  /**\n   * Check active \n   *\n   * @param  {Mixed}   state  A string using state notation or a RegExp\n   * @return {Boolean}        A true if state is parent to current state\n   */\n  _self.active = function(state) {\n    state = state || '';\n    \n    // No state\n    if(_current === null) {\n      return false;\n\n    // Use RegExp matching\n    } else if(state instanceof RegExp) {\n      return !!_current.name.match(state);\n\n    // String; state dot-notation\n    } else if(typeof state === 'string') {\n\n      // Cast string to RegExp\n      if(state.match(/^\\/.*\\/$/)) {\n        var casted = state.substr(1, state.length-2);\n        return !!_current.name.match(new RegExp(casted));\n\n      // Transform to state notation\n      } else {\n        var transformed = state\n          .split('.')\n          .map(function(item) {\n            return item === '*' ? '[a-zA-Z0-9]*' : item;\n          })\n          .join('\\\\.');\n\n        return !!_current.name.match(new RegExp(transformed));\n      }\n    }\n\n    // Non-matching\n    return false;\n  };\n\n  /**\n   * Retrieve definition of states\n   * \n   * @return {Object} A hash of states\n   */\n  _self.library = function() {\n    return _library;\n  };\n\n  /**\n   * Retrieve history\n   * \n   * @return {Object} A hash of states\n   */\n  _self.history = function() {\n    return _history;\n  };\n\n  // Return instance\n  return _self;\n}];\n\n\n}).call(this,require('_process'))\n\n},{\"../utils/object\":8,\"_process\":2,\"events\":1}],6:[function(require,module,exports){\n'use strict';\n\nmodule.exports = [function() {\n\n  return {\n\n    // TODO get url and match to existing state; set state\n\n\n  };\n\n}];\n\n},{}],7:[function(require,module,exports){\n'use strict';\n\n// Polyfill Function.prototype.bind()\nif (!Function.prototype.bind) {\n  Function.prototype.bind = function(oThis) {\n    if (typeof this !== 'function') {\n      // closest thing possible to the ECMAScript 5\n      // internal IsCallable function\n      throw new TypeError('Function.prototype.bind - what is trying to be bound is not callable');\n    }\n\n    var aArgs   = Array.prototype.slice.call(arguments, 1),\n        fToBind = this,\n        fNOP    = function() {},\n        fBound  = function() {\n          return fToBind.apply(\n            this instanceof fNOP ? this : oThis,\n            aArgs.concat(Array.prototype.slice.call(arguments)));\n        };\n\n    fNOP.prototype = this.prototype;\n    fBound.prototype = new fNOP();\n\n    return fBound;\n  };\n}\n\n},{}],8:[function(require,module,exports){\n'use strict';\n\n// Polyfill Object.create()\nif (typeof Object.create !== 'function') {\n  // Production steps of ECMA-262, Edition 5, 15.2.3.5\n  // Reference: http://es5.github.io/#x15.2.3.5\n  Object.create = (function() {\n    // To save on memory, use a shared constructor\n    function Temp() {}\n\n    // make a safe reference to Object.prototype.hasOwnProperty\n    var hasOwn = Object.prototype.hasOwnProperty;\n\n    return function (O) {\n      // 1. If Type(O) is not Object or Null throw a TypeError exception.\n      if (typeof O !== 'object') {\n        throw new TypeError('Object prototype may only be an Object or null');\n      }\n\n      // 2. Let obj be the result of creating a new object as if by the\n      //    expression new Object() where Object is the standard built-in\n      //    constructor with that name\n      // 3. Set the [[Prototype]] internal property of obj to O.\n      Temp.prototype = O;\n      var obj = new Temp();\n      Temp.prototype = null; // Let's not keep a stray reference to O...\n\n      // 4. If the argument Properties is present and not undefined, add\n      //    own properties to obj as if by calling the standard built-in\n      //    function Object.defineProperties with arguments obj and\n      //    Properties.\n      if (arguments.length > 1) {\n        // Object.defineProperties does ToObject on its first argument.\n        var Properties = Object(arguments[1]);\n        for (var prop in Properties) {\n          if (hasOwn.call(Properties, prop)) {\n            obj[prop] = Properties[prop];\n          }\n        }\n      }\n\n      // 5. Return obj\n      return obj;\n    };\n  })();\n}\n\n/**\n * Clone an object, recursive\n * \n * @param  {Object} obj An Object\n * @return {Object}     A cloned Object\n */\nmodule.exports.clone = function clone(obj, level) {\n  var copy;\n  level = level || 0;\n\n  if(level > 256) {\n    throw new Error('Cloning object more than 256 levels');\n  }\n\n  // Handle the 3 simple types, and null or undefined\n  if (null === obj || \"object\" != typeof obj) return obj;\n\n  // Handle Date\n  if (obj instanceof Date) {\n    copy = new Date();\n    copy.setTime(obj.getTime());\n    return copy;\n  }\n\n  // Handle Array\n  if (obj instanceof Array) {\n    copy = [];\n    for (var i = 0, len = obj.length; i < len; i++) {\n      copy[i] = clone(obj[i], level+1);\n    }\n    return copy;\n  }\n\n  // Handle Object\n  if (obj instanceof Object) {\n    copy = {};\n    for (var attr in obj) {\n      if (obj.hasOwnProperty(attr)) copy[attr] = clone(obj[attr], level+1);\n    }\n    return copy;\n  }\n\n  throw new Error(\"Unable to copy obj! Its type isn't supported.\");\n};\n\n},{}],9:[function(require,module,exports){\n'use strict';\n\n/* global window:false */\n/* global process:false */\n/* global setImmediate:false */\n/* global setTimeout:false */\n\n// Polyfill process.nextTick()\n\nif(window) {\n  if(!window.process) {\n\n    var _process = {\n      nextTick: function(callback) {\n        setTimeout(callback, 0);\n      }\n    };\n\n    // Export\n    window.process = _process;\n  }\n}\n\n},{}]},{},[4])\n//# sourceMappingURL=data:application/json;charset:utf-8;base64,\n"],"sourceRoot":"/source/"}